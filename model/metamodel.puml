@startuml
title Métamodèle - Othello DSL

' ======================
' Concepts principaux
' ======================

class Game {
  +name: ID
}

class CompileTimeBlock {
  +parameters: CTParameter[*]
}

class CTParameter {
  +name: ID
  +value: CTValue
}

class CTValue {
  +value: string
}

class RunTimeBlock {
  +parameters: RTParameter[*]
}

class RTParameter {
  +name: ID
  +value: RTValue
}

class RTValue {
  +value: string
}

class UIBlock {
  +theme: ThemeBlock
  +layout: LayoutBlock
}

class ThemeBlock {
  +name: string
  +sprites: SpriteDef[*]
}

class SpriteDef {
  +name: ID
  +path: string
}

class LayoutBlock {
  +rows: int
  +columns: int
  +left: ID
  +right: ID
  +scaling: string
}

class Board {
  +rows: int
  +columns: int
}

class Players {
  +black: Player
  +white: Player
}

class Player {
  +color: string  <<"black" | "white">>
  +name: ID
}

class Initial {
  +cells: CellAssign[*]
}

class CellAssign {
  +position: Position
  +color: string  <<"black" | "white">>
}

class Position {
  +row: int
  +column: int
}

class Rules {
  +move: MoveRule
  +end: EndRule
  +scoring: ScoringRule
}

class MoveRule {
  +type: string  <<"placement" | "pass">>
  +condition: ConditionExpr
  +effect: EffectExpr
}

class ConditionExpr {
  +name: string = "captures_in_any_direction"
}

class EffectExpr {
  +effect: string = "flip_captured_stones"
}

class EndRule {
  +condition: ConditionExpr
}

class ScoringRule {
  +rule: string = "count_pieces_per_player"
}


' ======================
' Relations
' ======================

Game --> CompileTimeBlock : compileTime [0..1]
Game --> RunTimeBlock : runTime [0..1]
Game --> UIBlock : ui [0..1]
Game --> Board : board [1]
Game --> Players : players [1]
Game --> Initial : initial [1]
Game --> Position : position [1]
Game --> Rules : rules [1]

CompileTimeBlock --> CTParameter
CTParameter --> CTValue

RunTimeBlock --> RTParameter
RTParameter --> RTValue

UIBlock --> ThemeBlock
UIBlock --> LayoutBlock
ThemeBlock --> SpriteDef

LayoutBlock --> Board

Players --> Player
Initial --> CellAssign
CellAssign --> Position
Rules --> MoveRule
Rules --> EndRule
Rules --> ScoringRule
MoveRule --> ConditionExpr
MoveRule --> EffectExpr
EndRule --> ConditionExpr

@enduml
